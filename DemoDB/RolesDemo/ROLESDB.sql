/******************************************************************************/
/***          Generated by IBExpert 2010.03.25 20.08.2010 11:41:32          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1251;

CREATE DATABASE 'localhost:C:\Projects\DCL\DemoDB\RolesDemo\ROLESDB.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 8192
DEFAULT CHARACTER SET WIN1251;



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR MAIN_GENERATOR_ID;
SET GENERATOR MAIN_GENERATOR_ID TO 31;



SET TERM ^ ; 



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/

CREATE OR ALTER PROCEDURE ADD_MENU_ITEM_TO_ROLE (
    ROLEID INTEGER,
    MENUITEMID INTEGER)
RETURNS (
    ISAPPEND INTEGER)
AS
BEGIN
  SUSPEND;
END^


CREATE OR ALTER PROCEDURE COPY_ROLE (
    ROLEIDFROM INTEGER,
    ROLEIDTO INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE OR ALTER PROCEDURE DEL_ROLE_AND_MENU (
    ROLEID INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE OR ALTER PROCEDURE DEL_ROLE_MENU (
    ROLEID INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE OR ALTER PROCEDURE ROLESMENU_IS_CORRECT
RETURNS (
    NUMSEQ INTEGER,
    DCLNAME CHAR(50) CHARACTER SET WIN1251,
    IDENT INTEGER,
    ROLE_ID INTEGER,
    ROLE_NAME VARCHAR(50) CHARACTER SET WIN1251)
AS
BEGIN
  SUSPEND;
END^



SET TERM ; ^



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE GLOBAL_PARAMS (
    PARAM_ID     INTEGER,
    PARAM_NAME   VARCHAR(50) CHARACTER SET WIN1251,
    PARAM_VALUE  VARCHAR(255) CHARACTER SET WIN1251
);

CREATE TABLE NOTIFYCATIONS (
    NOTIFY_ID      INTEGER NOT NULL,
    NOTIFY_TIME    TIMESTAMP,
    NOTIFY_ACTION  INTEGER,
    NOTIFY_STATE   INTEGER DEFAULT 0,
    USER_ID        INTEGER,
    NOTIFY_TEXT    VARCHAR(255) CHARACTER SET WIN1251
);

CREATE TABLE ROLES (
    ROLEID        INTEGER NOT NULL,
    ROLENAME      VARCHAR(20) CHARACTER SET WIN1251,
    LONGROLENAME  VARCHAR(15) CHARACTER SET WIN1251,
    ROLEPASS      VARCHAR(25) CHARACTER SET WIN1251,
    SHOWINLIST    INTEGER
);

CREATE TABLE ROLESMENU (
    ROLEID      INTEGER NOT NULL,
    MENUITEMID  INTEGER
);

CREATE TABLE SCRIPTS (
    NUMSEQ   INTEGER NOT NULL,
    DCLNAME  CHAR(50) CHARACTER SET WIN1251,
    DCLTEXT  BLOB SUB_TYPE 0 SEGMENT SIZE 80,
    COMMAND  CHAR(80) CHARACTER SET WIN1251,
    IDENT    INTEGER,
    PARENT   INTEGER,
    UPDATES  TIMESTAMP,
    ACTINON  CHAR(1) CHARACTER SET WIN1251
);



/******************************************************************************/
/***                                 Views                                  ***/
/******************************************************************************/


/* View: ROLESTOMENU */
CREATE VIEW ROLESTOMENU(
    ROLEID,
    ROLENAME,
    LONGROLENAME,
    MENUITEMID,
    DCLNAME)
AS
select r.roleid roleid, r.rolename, r.longrolename, rm.MENUITEMID, d.dclname from RolesMenu rm, Roles r, SCRIPTS d
where r.roleid=rm.roleid and rm.MENUITEMID=d.numseq
;


INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847719, 'RolesTable', 'Roles');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847720, 'RolPassField', 'RolePass');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847721, 'LongRoleNameField', 'LongRoleName');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847722, 'RoleIDFiled', 'RoleID');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847723, 'RoleNameField', 'RoleName');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847724, 'RolesMenuTable', 'RolesMenu');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847725, 'RoleMenuIDField', 'RoleID');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847726, 'MenuItemID', 'MenuItemID');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847727, 'Viewer', 'notepad');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847728, 'DialogsSettings', '1');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847729, 'DisableFieldsList', '0');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5847730, 'DisableColors', '0');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5380083, 'ShowFormPanel', '1');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5380085, 'TemplatesTable', 'Templ');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5380086, 'TemplatesNameField', 'TEMPL_NAME');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5380087, 'TemplatesDataField', 'TEMPL_DATA');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5380088, 'UpperBase', '1');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5380089, 'Debug', '0');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5380090, 'StringTypeChar', '''');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5494603, 'DCLTable', 'Scripts');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5494604, 'DCLNameField', 'DCLName');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5494605, 'DCLTextField', 'DCLText');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5494606, 'IdentifyField', 'Ident');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5494607, 'ParentFlgField', 'Parent');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5494608, 'CommandField', 'Command');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (5494609, 'NumSeqField', 'NumSeq');
INSERT INTO GLOBAL_PARAMS (PARAM_ID, PARAM_NAME, PARAM_VALUE) VALUES (9388827, 'UseMessages', '1');

COMMIT WORK;

INSERT INTO NOTIFYCATIONS (NOTIFY_ID, NOTIFY_TIME, NOTIFY_ACTION, NOTIFY_STATE, USER_ID, NOTIFY_TEXT) VALUES (31, '2009-11-11 11:11:11', 0, 100, 19, 'Привет Admin.');

COMMIT WORK;

INSERT INTO ROLES (ROLEID, ROLENAME, LONGROLENAME, ROLEPASS, SHOWINLIST) VALUES (19, 'Admin', 'Администратор', '12', 1);

COMMIT WORK;


SET BLOBFILE 'ROLESDB.lob';

INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (1, 'Roles', :h0_276, NULL, NULL, NULL, '2010-08-18 15:30:02', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (23, NULL, NULL, NULL, 20001, NULL, '2010-08-18 13:59:47', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (2, 'RolesMenu', :h276_469, NULL, NULL, NULL, '2009-07-24 11:13:05', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (3, 'Roles_AddMenuItem', :h6DF_1E1, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (4, 'Roles_AddMenuItemExec', :h8C0_10B, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (5, 'Roles_AddRoleCallDialog', :h9CB_21, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (6, 'Roles_CopyRole', :h9EC_1C1, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (7, 'Roles_CopyRoleExec', :hBAD_6A, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (8, 'Roles_CopyRole_Call', :hC17_1E, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (9, 'Roles_DelRole', :hC35_C9, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (10, 'Roles_DelRoleExec', :hCFE_58, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (11, 'Roles_DelRoleMenuItem', :hD56_E2, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (12, 'Roles_DelRolesMenuItem', :hE38_120, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (13, 'Roles_DelRolesMenuItem_Call', :hF58_26, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (14, 'Roles_Run_Test_RolesMenu', :hF7E_1C, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (15, 'Roles_Test_RolesMenu', :hF9A_1A9, NULL, NULL, NULL, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (16, 'Меню ролей', NULL, 'RolesMenu', 9002, 900, '2010-08-18 14:35:58', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (17, 'Роли', NULL, 'Roles', 9001, 900, '2009-07-24 10:50:45', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (18, 'Настройки', NULL, NULL, 900, NULL, '2009-07-24 10:54:56', 'I');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (0, 'Демонстрация ролей', NULL, NULL, 0, NULL, '2010-08-18 14:39:19', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (24, 'Версия', :h1143_8, NULL, 910, NULL, '2010-08-18 14:40:32', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (25, 'Notifycations', :h114B_264, NULL, NULL, NULL, '2010-08-18 15:06:33', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (26, 'Roles_Notify_Add_Scr', :h13AF_2C, NULL, NULL, NULL, '2010-08-18 15:07:21', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (27, 'Notify_Add', :h13DB_195, NULL, NULL, NULL, '2010-08-18 15:07:51', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (28, 'Notify_Add_Scr', :h1570_A6, NULL, NULL, NULL, '2010-08-18 15:08:14', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (21, 'Roles_AddRole', :h1616_144, '', NULL, NULL, '2009-07-24 11:20:36', 'U');
INSERT INTO SCRIPTS (NUMSEQ, DCLNAME, DCLTEXT, COMMAND, IDENT, PARENT, UPDATES, ACTINON) VALUES (22, 'Roles_AddRole_Scr', :h175A_9B, NULL, NULL, NULL, '2009-07-24 11:25:28', 'U');

COMMIT WORK;

INSERT INTO ROLESMENU (ROLEID, MENUITEMID) VALUES (19, 18);
INSERT INTO ROLESMENU (ROLEID, MENUITEMID) VALUES (19, 17);
INSERT INTO ROLESMENU (ROLEID, MENUITEMID) VALUES (19, 16);
INSERT INTO ROLESMENU (ROLEID, MENUITEMID) VALUES (19, 23);
INSERT INTO ROLESMENU (ROLEID, MENUITEMID) VALUES (19, 0);
INSERT INTO ROLESMENU (ROLEID, MENUITEMID) VALUES (19, 24);

COMMIT WORK;



/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE NOTIFYCATIONS ADD CONSTRAINT PK_NOTIFYCATIONS PRIMARY KEY (NOTIFY_ID);
ALTER TABLE ROLES ADD CONSTRAINT PK_ROLES PRIMARY KEY (ROLEID);
ALTER TABLE SCRIPTS ADD CONSTRAINT PK_SCRIPTS_1 PRIMARY KEY (NUMSEQ);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE ROLESMENU ADD CONSTRAINT FK_ROLESMENU_1 FOREIGN KEY (MENUITEMID) REFERENCES SCRIPTS (NUMSEQ);
ALTER TABLE ROLESMENU ADD CONSTRAINT FK_ROLESMENU_2 FOREIGN KEY (ROLEID) REFERENCES ROLES (ROLEID);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE INDEX ROLESMENU_IDX1 ON ROLESMENU (ROLEID, MENUITEMID);
CREATE UNIQUE INDEX SCRIPTS_IDX2 ON SCRIPTS (DCLNAME);
CREATE UNIQUE INDEX SCRIPTS_IDX3 ON SCRIPTS (IDENT, PARENT);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: NOTIFYCATIONS_BI0 */
CREATE OR ALTER TRIGGER NOTIFYCATIONS_BI0 FOR NOTIFYCATIONS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.NOTIFY_ID is null) then
    new.NOTIFY_ID = gen_id(MAIN_GENERATOR_ID, 1);
end
^

/* Trigger: ROLES_BI */
CREATE OR ALTER TRIGGER ROLES_BI FOR ROLES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ROLEID IS NULL) THEN
    NEW.ROLEID = GEN_ID(main_generator_id,1);
END
^

/* Trigger: SCRIPTS_BI */
CREATE OR ALTER TRIGGER SCRIPTS_BI FOR SCRIPTS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.NUMSEQ IS NULL) THEN
    NEW.NUMSEQ = GEN_ID(MAIN_GENERATOR_ID,1);
END
^

/* Trigger: SCRIPTS_BIU0 */
CREATE OR ALTER TRIGGER SCRIPTS_BIU0 FOR SCRIPTS
ACTIVE BEFORE INSERT OR UPDATE POSITION 0
AS
begin
new.updates='now';
if (inserting) then
new.actinon='I';
if (updating) then
new.actinon='U';
end
^

SET TERM ; ^



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/


SET TERM ^ ;

CREATE OR ALTER PROCEDURE ADD_MENU_ITEM_TO_ROLE (
    ROLEID INTEGER,
    MENUITEMID INTEGER)
RETURNS (
    ISAPPEND INTEGER)
AS
declare variable TMP1 integer;
begin
select Count(r.roleid) from rolesmenu r where r.roleid=:roleid and r.menuitemid=:menuitemid into tmp1;
if (:tmp1=0) then
begin
    Insert into rolesmenu(roleid, menuitemid) values(:roleid, :menuitemid);
    ISAPPEND=1;
    suspend;
end
else
begin
ISAPPEND=0;
suspend;
end
end^


CREATE OR ALTER PROCEDURE COPY_ROLE (
    ROLEIDFROM INTEGER,
    ROLEIDTO INTEGER)
AS
begin
insert into rolesmenu select :roleidto, MENUITEMID from rolesmenu r where r.roleid=:roleidfrom;
end^


CREATE OR ALTER PROCEDURE DEL_ROLE_AND_MENU (
    ROLEID INTEGER)
AS
begin
delete from rolesmenu r where r.roleid=:roleid;
Delete from roles r where r.roleid=:roleid;
end^


CREATE OR ALTER PROCEDURE DEL_ROLE_MENU (
    ROLEID INTEGER)
AS
begin
delete from rolesmenu r where r.roleid=:roleid;
end^


CREATE OR ALTER PROCEDURE ROLESMENU_IS_CORRECT
RETURNS (
    NUMSEQ INTEGER,
    DCLNAME CHAR(50) CHARACTER SET WIN1251,
    IDENT INTEGER,
    ROLE_ID INTEGER,
    ROLE_NAME VARCHAR(50) CHARACTER SET WIN1251)
AS
declare variable HEAD_EXISTS integer;
declare variable PARENT integer;
begin
for select r.roleid, r.longrolename from roles r order by r.longrolename into :role_id, :role_name do
for select d.numseq, d.ident, d.parent from RolesMenu rm, Roles r, SCRIPTS d where r.roleid=rm.roleid and rm.MENUITEMID=d.numseq and r.roleid=:role_id into :numseq, :ident, :parent do
begin
    select count(*) from RolesMenu rm, Roles r, SCRIPTS d where r.roleid=rm.roleid and rm.MENUITEMID=d.numseq and d.ident=:parent and r.roleid=:role_id into :head_exists;
    if (:head_exists=0) then
    begin
        for select s.numseq, s.dclname, s.ident from scripts s where s.ident=:parent into :numseq, :dclname, :ident do suspend;
    end
end
end^



SET TERM ; ^


/******************************************************************************/
/***                              Descriptions                              ***/
/******************************************************************************/

DESCRIBE TABLE ROLES
'Роли';

DESCRIBE TABLE ROLESMENU
'Меню ролей';



/******************************************************************************/
/***                              Descriptions                              ***/
/******************************************************************************/

DESCRIBE VIEW ROLESTOMENU
'Меню ролей';



/******************************************************************************/
/***                          Fields descriptions                           ***/
/******************************************************************************/

DESCRIBE FIELD ROLEID TABLE ROLES
'Код';

DESCRIBE FIELD ROLENAME TABLE ROLES
'Роль';

DESCRIBE FIELD LONGROLENAME TABLE ROLES
'Длинное имя роли';

DESCRIBE FIELD ROLEPASS TABLE ROLES
'Пароль';

DESCRIBE FIELD ROLEID TABLE ROLESMENU
'Роль';

DESCRIBE FIELD MENUITEMID TABLE ROLESMENU
'Код эл. меню';

